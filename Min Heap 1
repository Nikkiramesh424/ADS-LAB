import java.util.Arrays;

class MinHeap {
    public static boolean insert(int[] a, int n) {
        int i = n;
        int item = a[n];

        while (i > 1 && item < a[i / 2]) {
            a[i] = a[i / 2];
            i = i / 2;
        }
        a[i] = item;
        return true;
    }

    public static boolean delMin(int[] a, int n) {
        if (n == 0) {
            System.out.println("Heap is empty");
            return false;
        }

        int min = a[1]; 
        a[1] = a[n]; 
        adjust(a, 1, n - 1);
        return true;
    }

    public static void adjust(int[] a, int i, int n) {
        int j = 2 * i;
        int item = a[i];

        while (j <= n) {
            if (j < n && a[j] > a[j + 1]) {
                j = j + 1;
            }
            if (item <= a[j]) {
                break;
            }
            a[i] = a[j];
            i = j;
            j = 2 * i;
        }
        a[i] = item;
    }

    public static void main(String[] args) {
        int[] a = new int[10];
        int n = 0;

        n++; a[n] = 30; insert(a, n);
        n++; a[n] = 25; insert(a, n);
        n++; a[n] = 10; insert(a, n);
        n++; a[n] = 15; insert(a, n);
        n++; a[n] = 20; insert(a, n);

        System.out.println("Heap after insertion: ");
        for (int i = 1; i <= n; i++) {
            System.out.print(a[i] + " ");
        }
        System.out.println();

        delMin(a, n);
        n--;

        System.out.println("Heap after deletion: ");
        for (int i = 1; i <= n; i++) {
            System.out.print(a[i] + " ");
        }
        System.out.println();
    }
}
